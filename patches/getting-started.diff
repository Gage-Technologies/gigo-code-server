Modify Help: Getting Started

This modifies some text on the Getting Started page and adds text about using
code-server on a team.

It is enabled by default but can be overriden using the cli flag
`--disable-getting-started-override`.

Index: code-server/lib/vscode/src/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.ts
+++ code-server/lib/vscode/src/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.ts
@@ -3,20 +3,17 @@
  *  Licensed under the MIT License. See License.txt in the project root for license information.
  *--------------------------------------------------------------------------------------------*/
 
-import { $, Dimension, addDisposableListener, append, clearNode, reset } from 'vs/base/browser/dom';
+import { $, Dimension, addDisposableListener, append, clearNode, reset, prepend } from 'vs/base/browser/dom';
 import { renderFormattedText } from 'vs/base/browser/formattedTextRenderer';
 import { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';
 import { Button } from 'vs/base/browser/ui/button/button';
@@ -55,7 +55,7 @@ import { IRecentFolder, IRecentWorkspace
 import { OpenRecentAction } from 'vs/workbench/browser/actions/windowActions';
 import { OpenFileFolderAction, OpenFolderAction, OpenFolderViaWorkspaceAction } from 'vs/workbench/browser/actions/workspaceActions';
 import { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';
-import { WorkbenchStateContext } from 'vs/workbench/common/contextkeys';
+import { IsEnabledCoderGettingStarted, WorkbenchStateContext } from 'vs/workbench/common/contextkeys';
 import { IEditorOpenContext, IEditorSerializer } from 'vs/workbench/common/editor';
 import { IWebviewElement, IWebviewService } from 'vs/workbench/contrib/webview/browser/webview';
 import 'vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedColors';
@@ -813,6 +813,72 @@ export class GettingStartedPage extends
 			$('p.subtitle.description', {}, localize({ key: 'gettingStarted.editingEvolved', comment: ['Shown as subtitle on the Welcome page.'] }, "Editing evolved"))
 		);
 
 const SLIDE_TRANSITION_TIME_MS = 250;
-const configurationKey = 'workbench.startupEditor';
 
 export const allWalkthroughsHiddenContext = new RawContextKey<boolean>('allWalkthroughsHidden', false);
 export const inWelcomeContext = new RawContextKey<boolean>('inWelcome', false);
@@ -132,7 +126,6 @@ export class GettingStartedPage extends
 
 	// Ensure that the these are initialized before use.
 	// Currently initialized before use in buildCategoriesSlide and scrollToCategory
-	private recentlyOpened!: Promise<IRecentlyOpened>;
 	private gettingStartedCategories!: IResolvedWalkthrough[];
 	private featuredExtensions!: Promise<IFeaturedExtension[]>;
 
@@ -149,12 +142,10 @@ export class GettingStartedPage extends
 
 	private contextService: IContextKeyService;
 
-	private hasScrolledToFirstCategory = false;
 	private recentlyOpenedList?: GettingStartedIndexList<RecentEntry>;
 	private startList?: GettingStartedIndexList<IWelcomePageStartEntry>;
 	private gettingStartedList?: GettingStartedIndexList<IResolvedWalkthrough>;
-	private featuredExtensionsList?: GettingStartedIndexList<IFeaturedExtension>;
-
+	
 	private stepsSlide!: HTMLElement;
 	private categoriesSlide!: HTMLElement;
 	private stepsContent!: HTMLElement;
@@ -186,8 +177,6 @@ export class GettingStartedPage extends
 		@IEditorGroupsService private readonly groupsService: IEditorGroupsService,
 		@IContextKeyService contextService: IContextKeyService,
 		@IQuickInputService private quickInputService: IQuickInputService,
-		@IWorkspacesService private readonly workspacesService: IWorkspacesService,
-		@ILabelService private readonly labelService: ILabelService,
 		@IHostService private readonly hostService: IHostService,
 		@IWebviewService private readonly webviewService: IWebviewService,
 		@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,
@@ -247,12 +236,6 @@ export class GettingStartedPage extends
 		this._register(this.gettingStartedService.onDidAddWalkthrough(rerender));
 		this._register(this.gettingStartedService.onDidRemoveWalkthrough(rerender));
 
-		this.recentlyOpened = this.workspacesService.getRecentlyOpened();
-		this._register(workspacesService.onDidChangeRecentlyOpened(() => {
-			this.recentlyOpened = workspacesService.getRecentlyOpened();
-			rerender();
-		}));
-
 		this._register(this.gettingStartedService.onDidChangeWalkthrough(category => {
 			const ourCategory = this.gettingStartedCategories.find(c => c.id === category.id);
 			if (!ourCategory) { return; }
@@ -452,7 +435,6 @@ export class GettingStartedPage extends
 
 	private hideExtension(extensionId: string) {
 		this.setHiddenCategories([...this.getHiddenCategories().add(extensionId)]);
-		this.featuredExtensionsList?.rerender();
 		this.registerDispatchListeners();
 	}
 
@@ -759,75 +741,230 @@ export class GettingStartedPage extends
 	}
 
 	private async buildCategoriesSlide() {
-
 		this.categoriesSlideDisposables.clear();
-		const showOnStartupCheckbox = new Toggle({
-			icon: Codicon.check,
-			actionClassName: 'getting-started-checkbox',
-			isChecked: this.configurationService.getValue(configurationKey) === 'welcomePage',
-			title: localize('checkboxTitle', "When checked, this page will be shown on startup."),
-			...defaultToggleStyles
-		});
-		showOnStartupCheckbox.domNode.id = 'showOnStartup';
-		const showOnStartupLabel = $('label.caption', { for: 'showOnStartup' }, localize('welcomePage.showOnStartup', "Show welcome page on startup"));
-		const onShowOnStartupChanged = () => {
-			if (showOnStartupCheckbox.checked) {
-				this.telemetryService.publicLog2<GettingStartedActionEvent, GettingStartedActionClassification>('gettingStarted.ActionExecuted', { command: 'showOnStartupChecked', argument: undefined, walkthroughId: this.currentWalkthrough?.id });
-				this.configurationService.updateValue(configurationKey, 'welcomePage');
-			} else {
-				this.telemetryService.publicLog2<GettingStartedActionEvent, GettingStartedActionClassification>('gettingStarted.ActionExecuted', { command: 'showOnStartupUnchecked', argument: undefined, walkthroughId: this.currentWalkthrough?.id });
-				this.configurationService.updateValue(configurationKey, 'none');
-			}
-		};
-		this.categoriesSlideDisposables.add(showOnStartupCheckbox);
-		this.categoriesSlideDisposables.add(showOnStartupCheckbox.onChange(() => {
-			onShowOnStartupChanged();
-		}));
-		this.categoriesSlideDisposables.add(addDisposableListener(showOnStartupLabel, 'click', () => {
-			showOnStartupCheckbox.checked = !showOnStartupCheckbox.checked;
-			onShowOnStartupChanged();
-		}));
-
+		
 		const header = $('.header', {},
-			$('h1.product-name.caption', {}, this.productService.nameLong),
-			$('p.subtitle.description', {}, localize({ key: 'gettingStarted.editingEvolved', comment: ['Shown as subtitle on the Welcome page.'] }, "Editing evolved"))
+			$('h1.product-name.caption', {}, "GIGO DevSpace"),
+			$('p.subtitle.description', {}, localize({ key: 'gettingStarted.editingEvolved', comment: ['Shown as subtitle on the Welcome page.'] }, "Learn By Creating"))
+		);
+
+		let nextStepsGigo: HTMLElement = $('.header', {});
+		nextStepsGigo = $('.codeTeacherPlugCategory', {},
+				$('h2', {
+					style: 'margin-bottom: 12px',
+				}, 'Need Some Help'),
+									$('button', {
+						style: [
+							'padding: 10px 16px	',
+							'border-radius: 4px',
+							'background: linear-gradient(94.04deg, #29C18C 0%, #3D8EF7 101.2%)',
+							'color: white',
+							'overflow: hidden',
+							'margin-right: 14px',
+						].join(';'),
+						onclick: () => this.commandService.executeCommand("codeTeacher.startChat")
+					},
+					$('h3', {
+						style: [
+							'margin: 0px 0px 6px',
+							'font-weight: 500',
+						].join(';'),
+					}, 'Use Code Teacher as a personal tutor!'),
+					$('p', {
+						style: [
+							'margin: 0',
+							'font-size: 13px',
+							'color: #dcdee2',
+						].join(';'),
+					}, 'Code Teacher is a Magic system built to provide personalized help for every developer. Code Teacher can help you with errors, explain concepts, and help you on your journey to becoming a better developer.'),
+					$('p', {
+						style: [
+							'margin: 0',
+							'margin-top: 8px',
+							'font-size: 13px',
+							'display: flex',
+							'align-items: center',
+						].join(';'),
+					}, 'Get started ', $('span', {
+						class: ThemeIcon.asClassName(Codicon.arrowRight),
+						style: [
+							'color: white',
+							'margin-left: 8px',
+						].join(';'),
+					})),
+					$('img', {
+						src: './_static/src/browser/media/code-teacher.png',
+						style: [
+							'margin-bottom: -65px',
+							'max-height: 300px',
+							'width: 100%',
+							'border-radius: 4px',
+							'object-fit: cover',
+							'object-position: top',
+							'margin-top: 10px',
+						].join(';'),
+					}),
+					),
+				);
+
+		let introToGigo: HTMLElement = $('.header', {});
+		introToGigo = $('.gigoIntroCategory', {},
+			$('h2', {
+				style: 'margin-bottom: 12px',
+			}, 'Let\'s Get Started'),
+			$('div', {},
+				$('p', {
+					style: [
+						'font-size: 18px',
+						'line-height: 1.3',
+						'margin-top: 0'
+					].join(';')
+				}, 'This is your DevSpace, it is a virtual environment in the cloud! You can use your DevSpace to complete interactive coding tutorials and work on Challenges. Let\'s learn about some of the tools in your DevSpace!'),
+				$('p', {
+					style: [
+						'font-size: 18px',
+						'line-height: 1.3',
+						'margin-top: 5px'
+					].join(';')
+				}, 'Use the activity bar on the left to navigate between different parts of your DevSpace. Click on any item below to explore more.'),
+				$('ul', {
+					style: [
+						'margin-top: 5px',
+					].join(';')
+				},
+					$('li', {},
+						$('p', {
+							style: [
+								'font-size: 14px',
+							].join(';')
+						}, 'Browse and manage your files and folders within your DevSpace.'),
+						$('button', {
+							style: [
+								'border-radius: 4px'
+							].join(';'),
+							onclick: () => this.commandService.executeCommand("workbench.view.explorer")
+						},
+							$('img', {
+								src: './_static/src/browser/media/vscode-icon-file-explorer.png',
+								style: 'height: 32px; width: 32px; vertical-align: middle; margin-right: 8px; border-radius: 4px;'
+							}),
+							$('span', {}, 'File Explorer'),
+						),
+					),
+					$('li', {},
+						$('p', {
+							style: [
+								'font-size: 14px',
+							].join(';')
+						}, 'Quickly find files, folders, and other items within your DevSpace.'),
+						$('button', {
+							style: [
+								'border-radius: 4px'
+							].join(';'),
+							onclick: () => this.commandService.executeCommand("workbench.action.findInFiles")
+						},
+							$('img', {
+								src: './_static/src/browser/media/vscode-icon-search.png',
+								style: 'height: 32px; width: 32px; vertical-align: middle; margin-right: 8px; border-radius: 4px;'
+							}),
+							$('span', {}, 'Search'),
+						),
+					),
+					$('li', {},
+						$('p', {
+							style: [
+								'font-size: 14px',
+							].join(';')
+						}, 'Open the GIGO tutorial for your project. All Interactive Challenges should have a tutorial but only some other Challenegs do.'),
+						$('button', {
+							style: [
+								'border-radius: 4px'
+							].join(';'),
+							onclick: () => this.commandService.executeCommand("gigo.tutorialView.focus")
+						},
+							$('img', {
+								src: './_static/src/browser/media/vscode-icon-tutorial.png',
+								style: 'height: 32px; width: 32px; vertical-align: middle; margin-right: 8px; border-radius: 4px;'
+							}),
+							$('span', {}, 'Challenge Tutorial'),
+						),
+					),
+					$('li', {},
+						$('p', {
+							style: [
+								'font-size: 14px',
+							].join(';')
+						}, 'Use the AFK feature to preserve your DevSpace for up to 1 hour of inactivity.'),
+						$('button', {
+							style: [
+								'border-radius: 4px'
+							].join(';'),
+							onclick: () => this.commandService.executeCommand("gigo.afkView.focus")
+						},
+							$('img', {
+								src: './_static/src/browser/media/vscode-icon-afk.png',
+								style: 'height: 32px; width: 32px; vertical-align: middle; margin-right: 8px; border-radius: 4px;'
+							}),
+							$('span', {}, 'AFK'),
+						),
+					),
+					$('li', {},
+						$('p', {
+							style: [
+								'font-size: 14px',
+							].join(';')
+						}, 'View your current streak status and your week\'s review.'),
+						$('button', {
+							style: [
+								'border-radius: 4px'
+							].join(';'),
+							onclick: () => this.commandService.executeCommand("gigo.streakView.focus")
+						},
+							$('img', {
+								src: './_static/src/browser/media/vscode-icon-streak.png',
+								style: 'height: 32px; width: 32px; vertical-align: middle; margin-right: 8px; border-radius: 4px;'
+							}),
+							$('span', {}, 'Streak'),
+						),
+					),
+					$('li', {},
+						$('p', {
+							style: [
+								'font-size: 14px',
+							].join(';')
+						}, 'Need some help? Code Teacher is your personal Magic tutor!'),
+						$('button', {
+							style: [
+								'border-radius: 4px'
+							].join(';'),
+							onclick: () => this.commandService.executeCommand("codeTeacher.startChat")
+						},
+							$('img', {
+								src: './_static/src/browser/media/vscode-icon-code-teacher.png',
+								style: 'height: 32px; width: 32px; vertical-align: middle; margin-right: 8px; border-radius: 4px;'
+							}),
+							$('span', {}, 'Code Teacher'),
+						),
+					),
+				)
+			)
 		);
 
 		const leftColumn = $('.categories-column.categories-column-left', {},);
 		const rightColumn = $('.categories-column.categories-column-right', {},);
 
@@ -884,6 +950,9 @@ export class GettingStartedPage extends
 				recentList.setLimit(5);
 				reset(leftColumn, startList.getDomElement(), recentList.getDomElement());
 			}
 			else {
 				this.container.classList.add('noWalkthroughs');
-				reset(rightColumn, featuredExtensionList.getDomElement());
-			}
-			setTimeout(() => this.categoriesPageScrollbar?.scanDomNode(), 50);
-			layoutRecentList();
-		};
-
-		const layoutFeaturedExtension = () => {
-			if (featuredExtensionList.itemCount) {
-				this.container.classList.remove('noExtensions');
-				reset(rightColumn, featuredExtensionList.getDomElement(), gettingStartedList.getDomElement());
-			}
-			else {
-				this.container.classList.add('noExtensions');
-				reset(rightColumn, gettingStartedList.getDomElement());
 			}
 			setTimeout(() => this.categoriesPageScrollbar?.scanDomNode(), 50);
 			layoutRecentList();
@@ -835,17 +972,12 @@ export class GettingStartedPage extends
 
 		const layoutRecentList = () => {
 			if (this.container.classList.contains('noWalkthroughs') && this.container.classList.contains('noExtensions')) {
-				recentList.setLimit(10);
 				reset(leftColumn, startList.getDomElement());
-				reset(rightColumn, recentList.getDomElement());
-			} else {
-				recentList.setLimit(5);
-				reset(leftColumn, startList.getDomElement(), recentList.getDomElement());
 			}
+			prepend(leftColumn, introToGigo)
+			prepend(rightColumn, nextStepsGigo)
 		};
 
 		gettingStartedList.onDidChange(layoutLists);
Index: code-server/lib/vscode/src/vs/workbench/contrib/welcomeGettingStarted/browser/media/gettingStarted.css
===================================================================
--- code-server.orig/lib/vscode/src/vs/workbench/contrib/welcomeGettingStarted/browser/media/gettingStarted.css
+++ code-server/lib/vscode/src/vs/workbench/contrib/welcomeGettingStarted/browser/media/gettingStarted.css
@@ -60,6 +60,15 @@
 	display: block;
 }
 
+.monaco-workbench .part.editor > .content .gettingStartedContainer .coder {
+	margin-bottom: 0.2em;
+}
+
+.monaco-workbench .part.editor > .content .gettingStartedContainer .coder-coder {
+	font-size: 1em;
+	margin-top: 0.2em;
+}
+
 .monaco-workbench.hc-black .part.editor > .content .gettingStartedContainer .subtitle,
 .monaco-workbench.hc-light .part.editor > .content .gettingStartedContainer .subtitle {
 	font-weight: 200;
Index: code-server/lib/vscode/src/vs/workbench/browser/web.api.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/workbench/browser/web.api.ts
+++ code-server/lib/vscode/src/vs/workbench/browser/web.api.ts
@@ -299,6 +299,11 @@ export interface IWorkbenchConstructionO
 	 */
 	readonly isEnabledFileUploads?: boolean
 
+	/**
+	 * Whether to use Coder's custom Getting Started text.
+	 */
+	readonly isEnabledCoderGettingStarted?: boolean
+
 	//#endregion
 
 	//#region Profile options
Index: code-server/lib/vscode/src/vs/workbench/services/environment/browser/environmentService.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/workbench/services/environment/browser/environmentService.ts
+++ code-server/lib/vscode/src/vs/workbench/services/environment/browser/environmentService.ts
@@ -44,6 +44,11 @@ export interface IBrowserWorkbenchEnviro
 	readonly isEnabledFileUploads?: boolean;
 
 	/**
+	 * Enable Coder's custom getting started text.
+	 */
+	readonly isEnabledCoderGettingStarted?: boolean;
+
+	/**
 	 * Gets whether a resolver extension is expected for the environment.
 	 */
 	readonly expectsResolverExtension: boolean;
@@ -135,6 +140,13 @@ export class BrowserWorkbenchEnvironment
 		return this.options.isEnabledFileUploads;
 	}
 
+	get isEnabledCoderGettingStarted(): boolean {
+		if (typeof this.options.isEnabledCoderGettingStarted === "undefined") {
+			throw new Error('isEnabledCoderGettingStarted was not provided to the browser');
+		}
+		return this.options.isEnabledCoderGettingStarted;
+	}
+
 	@memoize
 	get argvResource(): URI { return joinPath(this.userRoamingDataHome, 'argv.json'); }
 
Index: code-server/lib/vscode/src/vs/server/node/serverEnvironmentService.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/server/node/serverEnvironmentService.ts
+++ code-server/lib/vscode/src/vs/server/node/serverEnvironmentService.ts
@@ -19,6 +19,7 @@ export const serverOptions: OptionDescri
 	'disable-file-downloads': { type: 'boolean' },
 	'disable-file-uploads': { type: 'boolean' },
 	'locale': { type: 'string' },
+	'disable-getting-started-override': { type: 'boolean' },
 
 	/* ----- server setup ----- */
 
@@ -105,6 +106,7 @@ export interface ServerParsedArgs {
 	'disable-file-downloads'?: boolean;
 	'disable-file-uploads'?: boolean;
 	'locale'?: string
+	'disable-getting-started-override'?: boolean,
 
 	/* ----- server setup ----- */
 
Index: code-server/lib/vscode/src/vs/server/node/webClientServer.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/server/node/webClientServer.ts
+++ code-server/lib/vscode/src/vs/server/node/webClientServer.ts
@@ -338,6 +338,7 @@ export class WebClientServer {
 			userDataPath: this._environmentService.userDataPath,
 			isEnabledFileDownloads: !this._environmentService.args['disable-file-downloads'],
 			isEnabledFileUploads: !this._environmentService.args['disable-file-uploads'],
+			isEnabledCoderGettingStarted: !this._environmentService.args['disable-getting-started-override'],
 			_wrapWebWorkerExtHostInIframe,
 			developmentOptions: { enableSmokeTestDriver: this._environmentService.args['enable-smoke-test-driver'] ? true : undefined, logLevel: this._logService.getLevel() },
 			settingsSyncOptions: !this._environmentService.isBuilt && this._environmentService.args['enable-sync'] ? { enabled: true } : undefined,
Index: code-server/lib/vscode/src/vs/workbench/browser/contextkeys.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/workbench/browser/contextkeys.ts
+++ code-server/lib/vscode/src/vs/workbench/browser/contextkeys.ts
@@ -7,7 +7,7 @@ import { Event } from 'vs/base/common/ev
 import { Disposable } from 'vs/base/common/lifecycle';
 import { IContextKeyService, IContextKey, setConstant as setConstantContextKey } from 'vs/platform/contextkey/common/contextkey';
 import { InputFocusedContext, IsMacContext, IsLinuxContext, IsWindowsContext, IsWebContext, IsMacNativeContext, IsDevelopmentContext, IsIOSContext, ProductQualityContext, IsMobileContext } from 'vs/platform/contextkey/common/contextkeys';
-import { SplitEditorsVertically, InEditorZenModeContext, ActiveEditorCanRevertContext, ActiveEditorGroupLockedContext, ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext, AuxiliaryBarVisibleContext, SideBarVisibleContext, PanelAlignmentContext, PanelMaximizedContext, PanelVisibleContext, ActiveEditorContext, EditorsVisibleContext, TextCompareEditorVisibleContext, TextCompareEditorActiveContext, ActiveEditorGroupEmptyContext, EmbedderIdentifierContext, EditorTabsVisibleContext, IsMainEditorCenteredLayoutContext, ActiveEditorGroupIndexContext, ActiveEditorGroupLastContext, ActiveEditorReadonlyContext, MainEditorAreaVisibleContext, ActiveEditorAvailableEditorIdsContext, DirtyWorkingCopiesContext, EmptyWorkspaceSupportContext, EnterMultiRootWorkspaceSupportContext, HasWebFileSystemAccess, IsMainWindowFullscreenContext, OpenFolderWorkspaceSupportContext, RemoteNameContext, VirtualWorkspaceContext, WorkbenchStateContext, WorkspaceFolderCountContext, PanelPositionContext, TemporaryWorkspaceContext, ActiveEditorCanToggleReadonlyContext, applyAvailableEditorIds, TitleBarVisibleContext, TitleBarStyleContext, MultipleEditorGroupsContext, IsAuxiliaryWindowFocusedContext, ActiveCompareEditorCanSwapContext, IsEnabledFileDownloads, IsEnabledFileUploads } from 'vs/workbench/common/contextkeys';
+import { SplitEditorsVertically, InEditorZenModeContext, ActiveEditorCanRevertContext, ActiveEditorGroupLockedContext, ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext, AuxiliaryBarVisibleContext, SideBarVisibleContext, PanelAlignmentContext, PanelMaximizedContext, PanelVisibleContext, ActiveEditorContext, EditorsVisibleContext, TextCompareEditorVisibleContext, TextCompareEditorActiveContext, ActiveEditorGroupEmptyContext, EmbedderIdentifierContext, EditorTabsVisibleContext, IsMainEditorCenteredLayoutContext, ActiveEditorGroupIndexContext, ActiveEditorGroupLastContext, ActiveEditorReadonlyContext, MainEditorAreaVisibleContext, ActiveEditorAvailableEditorIdsContext, DirtyWorkingCopiesContext, EmptyWorkspaceSupportContext, EnterMultiRootWorkspaceSupportContext, HasWebFileSystemAccess, IsMainWindowFullscreenContext, OpenFolderWorkspaceSupportContext, RemoteNameContext, VirtualWorkspaceContext, WorkbenchStateContext, WorkspaceFolderCountContext, PanelPositionContext, TemporaryWorkspaceContext, ActiveEditorCanToggleReadonlyContext, applyAvailableEditorIds, TitleBarVisibleContext, TitleBarStyleContext, MultipleEditorGroupsContext, IsAuxiliaryWindowFocusedContext, ActiveCompareEditorCanSwapContext, IsEnabledFileDownloads, IsEnabledFileUploads, IsEnabledCoderGettingStarted, } from 'vs/workbench/common/contextkeys';
 import { TEXT_DIFF_EDITOR_ID, EditorInputCapabilities, SIDE_BY_SIDE_EDITOR_ID, EditorResourceAccessor, SideBySideEditor } from 'vs/workbench/common/editor';
 import { trackFocus, addDisposableListener, EventType, onDidRegisterWindow, getActiveWindow } from 'vs/base/browser/dom';
 import { preferredSideBySideGroupDirection, GroupDirection, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';
@@ -228,6 +228,7 @@ export class WorkbenchContextKeysHandler
 		// code-server
 		IsEnabledFileDownloads.bindTo(this.contextKeyService).set(this.environmentService.isEnabledFileDownloads ?? true)
 		IsEnabledFileUploads.bindTo(this.contextKeyService).set(this.environmentService.isEnabledFileUploads ?? true)
+		IsEnabledCoderGettingStarted.bindTo(this.contextKeyService).set(this.environmentService.isEnabledCoderGettingStarted ?? true)
 
 		this.registerListeners();
 	}
Index: code-server/lib/vscode/src/vs/workbench/common/contextkeys.ts
===================================================================
--- code-server.orig/lib/vscode/src/vs/workbench/common/contextkeys.ts
+++ code-server/lib/vscode/src/vs/workbench/common/contextkeys.ts
@@ -42,6 +42,7 @@ export const EmbedderIdentifierContext =
 
 export const IsEnabledFileDownloads = new RawContextKey<boolean>('isEnabledFileDownloads', true, true);
 export const IsEnabledFileUploads = new RawContextKey<boolean>('isEnabledFileUploads', true, true);
+export const IsEnabledCoderGettingStarted = new RawContextKey<boolean>('isEnabledCoderGettingStarted', true, true);
 
 //#endregion
 
